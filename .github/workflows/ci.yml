# Copyright © 2022-present Adnan-Aidan Taha
# This file is part of "botato.gq".
#
# "botato.gq" is free software: you can redistribute it and/or modify it under the terms
# of the GNU General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# "botato.gq" is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
# without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
# PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with "botato.gq".
# If not, see <https://www.gnu.org/licenses/>.

name: ci

on:
  push:
    branches:
      - rewrite
      - master
  pull_request:
    branches:
      - rewrite
      - master
  workflow_dispatch:

jobs:
  prep:
    name: Install dependencies
    runs-on: ${{ matrix.os }}
    environment: production

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Setup node env 🏗
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node }}
          check-latest: true

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@main
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install YARN 🐈
        run: npm install --global yarn

      - name: Install dependencies 👨🏻‍💻
        run: yarn

  ci:
    name: Continous Integration
    runs-on: ${{ matrix.os }}
    needs: prep
    environment: production

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Install YARN 🐈
        run: npm install --location=global yarn

      - name: Run linter 👀
        continue-on-error: true
        run: yarn lint

      - name: Run tests 🧪
        run: yarn test

  fix-lint:
    name: Repair all of the linter issues
    needs: ci
    runs-on: ${{ matrix.os }}
    environment: production

    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master
        with:
          ref: ${{ env.GITHUB_REF }}

      - name: Install YARN 🐈
        run: npm install --global yarn

      - name: Fix linter issues 📝
        run: yarn lintfix
